name: Create a tag
on: 
  push:
    tags:
    - '*'
jobs:
  build-project: # you can create any job name you want
    name: Build Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter pub get
      # - run: flutter test
      - run: flutter build apk
      - name: Upload content
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
  tag-project:
      name: Tag Project
      runs-on: ubuntu-latest
      needs: build-project
      steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: release-apk
      - name: Test artifact download
        run: ls -R
      - name: Push tag
        id: create-new-tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-tag.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: .app-release.apk
          asset_name: Instary.apk
          asset_content_type: application/zip